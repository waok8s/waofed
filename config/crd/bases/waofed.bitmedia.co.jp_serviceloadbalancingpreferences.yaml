---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: serviceloadbalancingpreferences.waofed.bitmedia.co.jp
spec:
  group: waofed.bitmedia.co.jp
  names:
    kind: ServiceLoadbalancingPreference
    listKind: ServiceLoadbalancingPreferenceList
    plural: serviceloadbalancingpreferences
    shortNames:
    - slp
    singular: serviceloadbalancingpreference
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ServiceLoadbalancingPreference is the Schema for the serviceloadbalancingpreferences
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceLoadbalancingPreferenceSpec defines the desired state
              of ServiceLoadbalancingPreference
            properties:
              clusters:
                additionalProperties:
                  description: ClusterPreferences represent the weight of the service
                    in a cluster.
                  properties:
                    weight:
                      description: Weight is the weight in 64 bit **signed** integer.
                        Loadbalancer controllers using SLP should normalize the value.
                      format: int64
                      type: integer
                  required:
                  - weight
                  type: object
                description: Clusters maps between cluster names and preference weight
                  settings in these clusters. "*" (if provided) applies to all clusters
                  if an explicit mapping is not provided. Clusters without preferences
                  should not have any access.
                type: object
            required:
            - clusters
            type: object
          status:
            description: ServiceLoadbalancingPreferenceStatus defines the observed
              state of ServiceLoadbalancingPreference
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
